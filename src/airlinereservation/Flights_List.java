/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinereservation;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHARIF
 */
public class Flights_List extends javax.swing.JInternalFrame {

    /**
     * Creates new form Flights_List
     */
    public Flights_List() {
        initComponents();
    }
    PreparedStatement pst;
    Connection con;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableFlight = new javax.swing.JTable();
        sourceflight = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        destiFlight = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setLayout(null);

        TableFlight.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FlightID", "FlightName", "Source", "Destination", "Flight Charges", "Departure Time", "Departure Date", "Arrive Time", "Arrive Date"
            }
        ));
        jScrollPane1.setViewportView(TableFlight);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 130, 980, 290);

        sourceflight.setBackground(new java.awt.Color(255, 204, 255));
        sourceflight.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        sourceflight.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select source" }));
        jPanel1.add(sourceflight);
        sourceflight.setBounds(100, 30, 200, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("SOURCE");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 30, 90, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("DESTINATION");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(330, 30, 110, 30);

        destiFlight.setBackground(new java.awt.Color(255, 204, 255));
        destiFlight.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        destiFlight.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select destination" }));
        jPanel1.add(destiFlight);
        destiFlight.setBounds(450, 30, 180, 30);

        jButton1.setBackground(new java.awt.Color(153, 255, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("SHOW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(680, 30, 100, 30);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\CHARIF\\Downloads\\rsz_flightlist.jpg")); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1060, 540);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from flights where flightsource=? and destination=?";
                pst=con.prepareStatement(q);
                pst.setString(1,sourceflight.getSelectedItem().toString());
                pst.setString(2,destiFlight.getSelectedItem().toString());
                DefaultTableModel mymodel=(DefaultTableModel) TableFlight.getModel();
                mymodel.setNumRows(0);
                ResultSet myresult=pst.executeQuery();
                if(myresult.next())
                {
                    jScrollPane1.setVisible(true);
                    getContentPane().validate();
                    do
                    {

                        String flightid=myresult.getString("flightID");
                        String flightname=myresult.getString("flightName");
                        String Source=myresult.getString("flightsource");
                        String dest=myresult.getString("destination");
                        String chargeFlig=myresult.getString("chargesFlight");
                        String depTime=myresult.getString("departureTime");
                        String depDate=myresult.getString("departureDate");
                        String Arrivaltime=myresult.getString("arriveTime");
                        String flightcharges=myresult.getString("arriveDate");

                        mymodel.addRow(new Object[]{flightid,flightname,Source,dest,chargeFlig,depTime,depDate,Arrivaltime,flightcharges});
                    }
                    while(myresult.next());
                }
                else
                {
                    jScrollPane1.setVisible(false);
                    getContentPane().validate();
                    JOptionPane.showMessageDialog(rootPane, "No Records ", "Error",JOptionPane.ERROR_MESSAGE);
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        try
        {
             
               
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from sourcedestination";
                pst=con.prepareStatement(q);
                ResultSet myresult=pst.executeQuery();
                
                if(myresult.next())
                {
                    do
                    {
                        sourceflight.addItem(myresult.getString("sourceflight"));
                        destiFlight.addItem(myresult.getString("flightDestination"));
                    }
                    while(myresult.next());
                }
                 
               // FlightAutoID();
                  
                       
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                finally
                {
                    con.close();
                }
            }
        catch(Exception e)
        {
         e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
    }
    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableFlight;
    private javax.swing.JComboBox destiFlight;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sourceflight;
    // End of variables declaration//GEN-END:variables
}
