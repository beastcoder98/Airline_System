/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinereservation;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHARIF
 */
public class Update_Flights extends javax.swing.JInternalFrame {

    /**
     * Creates new form Update_Flights
     */
    public Update_Flights() {
        initComponents();
    }
    Connection con;
    PreparedStatement pst;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        flight_ID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        SearchByIDButton = new javax.swing.JButton();
        CloseUpdateButton = new javax.swing.JButton();
        UpdateFlightsButton = new javax.swing.JButton();
        DeleteFlightDetails = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        flightSource = new javax.swing.JComboBox<>();
        flightDestination = new javax.swing.JComboBox<>();
        flightName = new javax.swing.JTextField();
        flightDepTime = new javax.swing.JTextField();
        flightDepDate = new com.toedter.calendar.JDateChooser();
        flightArriveTime = new javax.swing.JTextField();
        flightCharges = new javax.swing.JTextField();
        flightArriveDate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1115, 560));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("FLIGHT ID");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 130, 130, 30);

        flight_ID.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        flight_ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(flight_ID);
        flight_ID.setBounds(180, 130, 230, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("FLIGHT NAME");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 180, 130, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("SOURCE");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 230, 130, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("DEPARTURE TIME");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 290, 130, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("DEPARTURE DATE");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 340, 130, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("DESTINATION");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(570, 120, 140, 30);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("ARRIVE DATE");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(570, 180, 140, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("FLIGHT CHARGES");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(580, 230, 130, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("ARRIVE TIME");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(580, 280, 130, 30);

        SearchByIDButton.setBackground(new java.awt.Color(95, 174, 201));
        SearchByIDButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SearchByIDButton.setText("Search By ID");
        SearchByIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByIDButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SearchByIDButton);
        SearchByIDButton.setBounds(430, 130, 110, 30);

        CloseUpdateButton.setBackground(new java.awt.Color(255, 51, 51));
        CloseUpdateButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CloseUpdateButton.setText("Close");
        CloseUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseUpdateButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CloseUpdateButton);
        CloseUpdateButton.setBounds(960, 460, 120, 40);

        UpdateFlightsButton.setBackground(new java.awt.Color(240, 76, 32));
        UpdateFlightsButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UpdateFlightsButton.setText("Update");
        UpdateFlightsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateFlightsButtonActionPerformed(evt);
            }
        });
        jPanel1.add(UpdateFlightsButton);
        UpdateFlightsButton.setBounds(320, 400, 100, 40);

        DeleteFlightDetails.setBackground(new java.awt.Color(255, 0, 0));
        DeleteFlightDetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteFlightDetails.setText("Delete");
        DeleteFlightDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteFlightDetailsActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteFlightDetails);
        DeleteFlightDetails.setBounds(480, 400, 100, 40);

        jLabel8.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 255, 255));
        jLabel8.setText("UPDATE OR DELETE FLIGHTS INFORMATION");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(80, 20, 540, 60);

        flightSource.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jPanel1.add(flightSource);
        flightSource.setBounds(180, 230, 230, 30);

        flightDestination.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jPanel1.add(flightDestination);
        flightDestination.setBounds(730, 110, 230, 30);

        flightName.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        flightName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(flightName);
        flightName.setBounds(180, 180, 230, 30);

        flightDepTime.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        flightDepTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(flightDepTime);
        flightDepTime.setBounds(180, 290, 230, 30);

        flightDepDate.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jPanel1.add(flightDepDate);
        flightDepDate.setBounds(180, 340, 230, 30);

        flightArriveTime.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        flightArriveTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(flightArriveTime);
        flightArriveTime.setBounds(730, 280, 230, 30);

        flightCharges.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        flightCharges.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(flightCharges);
        flightCharges.setBounds(730, 230, 230, 30);

        flightArriveDate.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jPanel1.add(flightArriveDate);
        flightArriveDate.setBounds(730, 170, 230, 30);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\CHARIF\\Downloads\\phoyoprojectjava\\updateBackgraound.jpg")); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(1170, 560));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1110, 560);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateFlightsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateFlightsButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
//,,,,,,,,                
                String q="update flights set flightName=?,flightsource=?,departureTime=?,departureDate=?,arriveTime=?,destination=?,arriveDate=?chargesFlight=? where flightID=?";
                pst=con.prepareStatement(q);
                pst.setString(1, flightName.getText());
                pst.setString(2,flightSource.getSelectedItem().toString());
                pst.setString(3, flightDepTime.getText());
                SimpleDateFormat myformat=new SimpleDateFormat("dd-MM-yyyy");
                String depDate=myformat.format(flightDepDate.getDate());
                 pst.setString(4,depDate);
                 pst.setString(5,flightArriveTime.getText());               
                pst.setString(6,flightDestination.getSelectedItem().toString());
                SimpleDateFormat dateformat=new SimpleDateFormat("dd-MM-yyyy");
                String arrDate=dateformat.format( flightArriveDate.getDate());                
                pst.setString(7,arrDate);
                
                 pst.setString(8,flightCharges.getText()); 
                pst.setString(9,flight_ID.getText());
                pst.executeUpdate();
                
                JOptionPane.showMessageDialog(rootPane, "Update Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
              /*  flight_ID.setText("");
                flightName.setText("");
                flightSource.setSelectedIndex(0);
                flightDestination.setSelectedIndex(0);
                flightDepTime.setText("");
                flightCharges.setText("");

                flightArriveTime.setText("");
               flightArriveDate.setDate(null);
               flightDepDate.setDate(null);*/
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+e.getMessage(), " Error ",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_UpdateFlightsButtonActionPerformed

    private void CloseUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseUpdateButtonActionPerformed
        // TODO add your handling code here:
        int res = JOptionPane.showConfirmDialog(this,"Do you want to quit Update and Delete Flight page?","Confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(res == JOptionPane.YES_OPTION){
            // closing the system
            this.hide();
        } else if(res == JOptionPane.NO_OPTION || res == JOptionPane.CLOSED_OPTION){
            return;
        }
    }//GEN-LAST:event_CloseUpdateButtonActionPerformed

    private void SearchByIDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByIDButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            

            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String query="select * from flights where flightID=?";
                pst=con.prepareStatement(query);

                pst.setString(1,flight_ID.getText());
                ResultSet rs=pst.executeQuery();
                if(rs.next())
                {
                    //fl_ID,,,,,,,,
                    String F_Name = rs.getString("flightName");
                    String F_Source = rs.getString("flightsource");
                    String F_depTime = rs.getString("departureTime");
                    
                    String F_depDate = rs.getString("departureDate");
                    Date depDate = new SimpleDateFormat("dd-MM-yyyy").parse(F_depDate);
                    
                    String F_arrTime = rs.getString("arriveTime");
                    String F_destina = rs.getString("destination");
                    
                    String F_arrDate= rs.getString("arriveDate");
                    Date arrDate = new SimpleDateFormat("dd-MM-yyyy").parse(F_arrDate);
                    
                    String F_Charges = rs.getString("chargesFlight");

                    flightName.setText(F_Name.trim());
                    flightSource.setSelectedItem(F_Source.trim());
                    flightDepTime.setText(F_depTime.trim());
                    flightDepDate.setDate(depDate);
                    flightArriveTime.setText(F_arrTime.trim());
                    flightDestination.setSelectedItem(F_destina.trim());
                    flightArriveDate.setDate(arrDate);
                    flightCharges.setText(F_Charges.trim());
                    

                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Wrong FLight ID Records ", " Error ",JOptionPane.ERROR_MESSAGE);
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+e.getMessage(), " Error ",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_SearchByIDButtonActionPerformed

    private void DeleteFlightDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteFlightDetailsActionPerformed
        // TODO add your handling code here:
        try
            {
               
              
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");
                
                try
                {
                    String q="delete from flights where flightID=?";
                    pst=con.prepareStatement(q);
                    pst.setString(1,flight_ID.getText());
                  
                JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete?", "FLight Deletion", JOptionPane.YES_NO_OPTION);
                int a=JOptionPane.YES_OPTION;
                if(a==JOptionPane.YES_OPTION)
                {
                    pst.executeUpdate();
                     JOptionPane.showMessageDialog(rootPane, "Deleted Successfully", "Flight details Deletion", JOptionPane.INFORMATION_MESSAGE);
                        
                flightName.setText("");
                flightSource.setSelectedIndex(0);
                flightDestination.setSelectedIndex(0);
                flightDepTime.setText("");
                flightCharges.setText("");

                flightArriveTime.setText("");
               flightArriveDate.setDate(null);
               flightDepDate.setDate(null);
                     
                }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                finally
                {
                    con.close();
                }
            }
        catch(Exception e)
        {
         e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
    }
    }//GEN-LAST:event_DeleteFlightDetailsActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        try
        {
             
               
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from sourcedestination";
                pst=con.prepareStatement(q);
                ResultSet myresult=pst.executeQuery();
                
                if(myresult.next())
                {
                    do
                    {
                        flightSource.addItem(myresult.getString("sourceflight"));
                        flightDestination.addItem(myresult.getString("flightDestination"));
                    }
                    while(myresult.next());
                }
                 
              //  FlightAutoID();
                  
                       
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                finally
                {
                    con.close();
                }
            }
        catch(Exception e)
        {
         e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
    }
    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseUpdateButton;
    private javax.swing.JButton DeleteFlightDetails;
    private javax.swing.JButton SearchByIDButton;
    private javax.swing.JButton UpdateFlightsButton;
    private com.toedter.calendar.JDateChooser flightArriveDate;
    private javax.swing.JTextField flightArriveTime;
    private javax.swing.JTextField flightCharges;
    private com.toedter.calendar.JDateChooser flightDepDate;
    private javax.swing.JTextField flightDepTime;
    private javax.swing.JComboBox<String> flightDestination;
    private javax.swing.JTextField flightName;
    private javax.swing.JComboBox<String> flightSource;
    private javax.swing.JTextField flight_ID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
