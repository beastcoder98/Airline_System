/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinereservation;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHARIF
 */
public class Ticket_reservation extends javax.swing.JInternalFrame {

    /**
     * Creates new form Ticket_reservation
     */
    public Ticket_reservation() {
        initComponents();
        generateTicketNumber();
    }
    
    Connection con;
    PreparedStatement pst;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupButtonGender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SelectDestiFlight = new javax.swing.JComboBox<>();
        selectSourceFlight = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        ShowButton = new javax.swing.JButton();
        custName = new javax.swing.JTextField();
        ticketNumber = new javax.swing.JTextField();
        SearchByNameButton = new javax.swing.JButton();
        FlightName = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        custLastName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        FlightID = new javax.swing.JTextField();
        chargesFlight = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        custID = new javax.swing.JTextField();
        SeachByIDButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        DepTime = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        BookButtonLoad = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressCust = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        MaleButton = new javax.swing.JRadioButton();
        FemaleButton = new javax.swing.JRadioButton();
        amountCase = new javax.swing.JTextField();
        flightClass = new javax.swing.JComboBox<>();
        SeatFlight = new javax.swing.JSpinner();
        CustBirth2 = new com.toedter.calendar.JDateChooser();
        flight_arriveDate = new com.toedter.calendar.JDateChooser();
        flight_DepDate = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Destination");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(320, 20, 80, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Source");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 20, 80, 30);

        SelectDestiFlight.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        SelectDestiFlight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select destination" }));
        jPanel1.add(SelectDestiFlight);
        SelectDestiFlight.setBounds(410, 20, 220, 30);

        selectSourceFlight.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        selectSourceFlight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select source" }));
        jPanel1.add(selectSourceFlight);
        selectSourceFlight.setBounds(90, 20, 220, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FlightId", "FlightName", "Departure", "Date of Departure", "Flight Charges", "Arrive Date"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 120, 660, 190);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("            Select Flight from List Given Below");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 70, 550, 40);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CUSTOMER ID", "NAME", "FATHER'S NAME", "GENDER", "DOB", "ADDRESS"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(0, 390, 670, 160);

        jLabel18.setBackground(new java.awt.Color(51, 51, 51));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("SEARCH BY NAME LIST");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(0, 320, 290, 60);

        ShowButton.setBackground(new java.awt.Color(172, 233, 244));
        ShowButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ShowButton.setText("SHOW");
        ShowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ShowButton);
        ShowButton.setBounds(640, 20, 80, 30);

        custName.setBackground(new java.awt.Color(251, 242, 234));
        custName.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        custName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(custName);
        custName.setBounds(800, 140, 200, 30);

        ticketNumber.setBackground(new java.awt.Color(251, 242, 234));
        ticketNumber.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ticketNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(ticketNumber);
        ticketNumber.setBounds(800, 60, 200, 30);

        SearchByNameButton.setBackground(new java.awt.Color(204, 255, 153));
        SearchByNameButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SearchByNameButton.setText("SEARCH BY NAME");
        SearchByNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByNameButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SearchByNameButton);
        SearchByNameButton.setBounds(1010, 140, 130, 30);

        FlightName.setBackground(new java.awt.Color(251, 242, 234));
        FlightName.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        FlightName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(FlightName);
        FlightName.setBounds(800, 480, 210, 30);

        jLabel20.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Flight Name");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(680, 480, 110, 30);

        custLastName.setBackground(new java.awt.Color(251, 242, 234));
        custLastName.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        custLastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(custLastName);
        custLastName.setBounds(800, 190, 200, 30);

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Customer ID");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(680, 100, 110, 30);

        FlightID.setBackground(new java.awt.Color(251, 242, 234));
        FlightID.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        FlightID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(FlightID);
        FlightID.setBounds(800, 430, 210, 30);

        chargesFlight.setBackground(new java.awt.Color(251, 242, 234));
        chargesFlight.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        chargesFlight.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        chargesFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargesFlightActionPerformed(evt);
            }
        });
        jPanel1.add(chargesFlight);
        chargesFlight.setBounds(1130, 250, 180, 30);

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Gender");
        jLabel11.setPreferredSize(new java.awt.Dimension(7, 20));
        jPanel1.add(jLabel11);
        jLabel11.setBounds(680, 240, 110, 30);

        custID.setBackground(new java.awt.Color(251, 242, 234));
        custID.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        custID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(custID);
        custID.setBounds(800, 100, 200, 30);

        SeachByIDButton.setBackground(new java.awt.Color(153, 255, 204));
        SeachByIDButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SeachByIDButton.setText("SEARCH");
        SeachByIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeachByIDButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SeachByIDButton);
        SeachByIDButton.setBounds(1010, 100, 80, 30);

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Last Name");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(680, 190, 110, 30);

        jLabel22.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Departure Time");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(1020, 400, 90, 30);

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Flight_ID");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(680, 430, 110, 30);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("Amount");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(1020, 350, 80, 30);

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Ticket Number");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(680, 60, 110, 30);

        DepTime.setBackground(new java.awt.Color(251, 242, 234));
        DepTime.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        DepTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(DepTime);
        DepTime.setBounds(1130, 400, 180, 30);

        jLabel13.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("ADDRESS");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(680, 350, 110, 30);

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Birth Day");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(680, 290, 110, 30);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Seats");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(1020, 190, 90, 30);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Flight Class");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(1020, 300, 90, 30);

        BookButtonLoad.setBackground(new java.awt.Color(170, 122, 122));
        BookButtonLoad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        BookButtonLoad.setText("BOOK");
        BookButtonLoad.setToolTipText("");
        BookButtonLoad.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BookButtonLoad.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BookButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookButtonLoadActionPerformed(evt);
            }
        });
        jPanel1.add(BookButtonLoad);
        BookButtonLoad.setBounds(1100, 560, 130, 40);

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Customer_NAME");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(680, 140, 110, 30);

        AddressCust.setBackground(new java.awt.Color(204, 204, 255));
        AddressCust.setColumns(20);
        AddressCust.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        AddressCust.setRows(5);
        jScrollPane1.setViewportView(AddressCust);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(800, 330, 210, 80);

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Flight Charges");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(1020, 250, 90, 30);

        MaleButton.setBackground(new java.awt.Color(153, 255, 153));
        GroupButtonGender.add(MaleButton);
        MaleButton.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        MaleButton.setText("Male");
        jPanel1.add(MaleButton);
        MaleButton.setBounds(800, 240, 80, 30);

        FemaleButton.setBackground(new java.awt.Color(153, 255, 153));
        GroupButtonGender.add(FemaleButton);
        FemaleButton.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        FemaleButton.setText("Female");
        jPanel1.add(FemaleButton);
        FemaleButton.setBounds(900, 240, 100, 30);

        amountCase.setBackground(new java.awt.Color(251, 242, 234));
        amountCase.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        amountCase.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        amountCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountCaseActionPerformed(evt);
            }
        });
        jPanel1.add(amountCase);
        amountCase.setBounds(1130, 350, 180, 30);

        flightClass.setBackground(new java.awt.Color(153, 255, 153));
        flightClass.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        flightClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy ", "Business" }));
        jPanel1.add(flightClass);
        flightClass.setBounds(1130, 300, 180, 30);

        SeatFlight.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(SeatFlight);
        SeatFlight.setBounds(1130, 190, 180, 30);
        jPanel1.add(CustBirth2);
        CustBirth2.setBounds(800, 280, 200, 30);

        flight_arriveDate.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jPanel1.add(flight_arriveDate);
        flight_arriveDate.setBounds(1130, 480, 180, 30);

        flight_DepDate.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jPanel1.add(flight_DepDate);
        flight_DepDate.setBounds(1130, 440, 190, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Dep Date");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(1020, 440, 100, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("ARRIVE DATE");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(1020, 480, 100, 30);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1320, 640);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1317, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void generateTicketNumber(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("select MAX(Ticket_Id) from tickets");
            rs.next();
            rs.getString("MAX(Ticket_Id)");
            
            if(rs.getString("MAX(Ticket_Id)") == null ){
                 ticketNumber.setText("DTKT1000");
            }
            else {
                long id = Long.parseLong(rs.getString("MAX(Ticket_Id)").substring(4,rs.getString("MAX(Ticket_Id)").length()));
                id++;
                ticketNumber.setText("DTKT" + String.format("%04d", id));
            }
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Add_Customer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Add_Customer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int column=0;
        int row=jTable1.getSelectedRow();

        String flightid=jTable1.getValueAt(row, column).toString();
        try
        {
           
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from flights where flightID=?";
                pst=con.prepareStatement(q);
                pst.setString(1,flightid);
                ResultSet myresult=pst.executeQuery();
                if(myresult.next())
                {

                    FlightID.setText(myresult.getString("flightID"));
                    FlightName.setText(myresult.getString("flightName"));
                    flight_arriveDate.setDate(myresult.getDate("arriveDate"));
                    flight_DepDate.setDate(myresult.getDate("departureDate"));
                    DepTime.setText(myresult.getString("departureTime"));
                    chargesFlight.setText(myresult.getString("chargesFlight"));
                   // SeatFlight.setText(myresult.getString(""));
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
               con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int column=0;
        int row=jTable2.getSelectedRow();

        String custid=jTable2.getValueAt(row, column).toString();
        try
        {
         
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from customer where Cust_ID=?";
                pst=con.prepareStatement(q);
                pst.setString(1,custid);
                ResultSet myresult=pst.executeQuery();
                if(myresult.next())
                {
                    custID.setText(myresult.getString("Cust_ID"));
                    custName.setText(myresult.getString("Cust_fname"));
                    custLastName.setText(myresult.getString("Cust_lname"));
                    if(myresult.getString("Cust_gender").equals("Male"))
                    {
                        MaleButton.setSelected(true);
                    }
                    else
                    {
                        FemaleButton.setSelected(true);
                    }

                    CustBirth2.setDate(myresult.getDate("Cust_birth"));
                    AddressCust.setText(myresult.getString("Cust_address"));
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void ShowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowButtonActionPerformed
        try
        {
            
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from flights where flightsource=? and destination=?";
                pst=con.prepareStatement(q);
                pst.setString(1,selectSourceFlight.getSelectedItem().toString());
                pst.setString(2,SelectDestiFlight.getSelectedItem().toString());
                
                ResultSet myresult=pst.executeQuery();
                DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
                mymodel.setNumRows(0);
                if(myresult.next())
                {
                    jScrollPane2.setVisible(true);
                    getContentPane().validate();
                    do
                    {
                        String flightid=myresult.getString("flightID");
                        String flightname=myresult.getString("flightName");
                        String departure=myresult.getString("departureTime");
                        String dod=myresult.getString("departureDate");
                        String charges=myresult.getString("chargesFlight");
                        String flightcharges=myresult.getString("arriveDate");

                        mymodel.addRow(new Object[]{flightid,flightname,departure,dod,charges,flightcharges});
                    }
                    while(myresult.next());
                }
                else
                {
                    jScrollPane2.setVisible(false);
                    getContentPane().validate();
                    JOptionPane.showMessageDialog(rootPane, "No Records ", "Error",JOptionPane.ERROR_MESSAGE);
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_ShowButtonActionPerformed

    private void chargesFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargesFlightActionPerformed
        
        {
            
            try {
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");
            } catch (SQLException ex) {
                Logger.getLogger(Ticket_reservation.class.getName()).log(Level.SEVERE, null, ex);
            }

            try
            {
                int a=Integer.parseInt(chargesFlight.getText());

                int b=Integer.parseInt(SeatFlight.getValue().toString());
                int amount;
                amount=a*b;
                flightClass.setSelectedItem(String.valueOf(amount));
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Ticket_reservation.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }//GEN-LAST:event_chargesFlightActionPerformed

    private void BookButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButtonLoadActionPerformed

        try

        {
            Class.forName("com.mysql.jdbc.Driver");
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="insert into tickets values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                pst=con.prepareStatement(q);
                pst.setString(1, ticketNumber.getText());
                pst.setString(2, custID.getText());
                pst.setString(3, custName.getText());
                pst.setString(4, custLastName.getText());
                if(MaleButton.isSelected())
                {
                   pst.setString(5, "Male");
                }
                else if(FemaleButton.isSelected())
                {
                    pst.setString(5, "Female");
                }

                SimpleDateFormat myformat=new SimpleDateFormat("dd-MM-yyyy");
                String Birth=myformat.format(CustBirth2.getDate());
                pst.setString(6,Birth);
                pst.setString(7, AddressCust.getText());
                
                pst.setString(8,FlightID.getText());
                pst.setString(9,FlightName.getText());
                pst.setString(10,amountCase.getText());
                pst.setString(11,chargesFlight.getText());
                pst.setString(12,flightClass.getSelectedItem().toString().trim());
                pst.setString(13,DepTime.getText());
                  
                String depDa=myformat.format(flight_DepDate.getDate());
                pst.setString(14,depDa);
                
                String arate=myformat.format(flight_arriveDate.getDate());
                pst.setString(15,arate);
                
                pst.setString(16,SeatFlight.getValue().toString());                
                pst.setString(17,selectSourceFlight.getSelectedItem().toString());
                pst.setString(18,SelectDestiFlight.getSelectedItem().toString());
                
                
                pst.executeUpdate();

                JOptionPane.showMessageDialog(rootPane, "Data Registered....Now Pay for Reservation", "Pay",JOptionPane.INFORMATION_MESSAGE);
                
                PaymentTickets win = new PaymentTickets();
                JDesktopPane desktopPane = getDesktopPane();
                desktopPane.add(win);
                win.show();
                
                SelectDestiFlight.setSelectedIndex(0);
                selectSourceFlight.setSelectedIndex(0);
                ticketNumber.setText("");
                custID.setText("");
                custName.setText("");
                custLastName.setText("");

                DepTime.setText("");
                chargesFlight.setText("");
                FlightID.setText("");

                FlightName.setText("");
                SeatFlight.setValue(0);

               GroupButtonGender.clearSelection();
               
                flight_DepDate.setDate(null);
                flight_arriveDate.setDate(null);
               // DepDate.setDate(null);
                
                AddressCust.setText("");
                generateTicketNumber();
                    
                
               

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to" + e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }

        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }

    }//GEN-LAST:event_BookButtonLoadActionPerformed

    private void SeachByIDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeachByIDButtonActionPerformed
        try
        {
            Connection myconnection;

            myconnection=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from customer where Cust_ID=?";
                    PreparedStatement mystatement=myconnection.prepareStatement(q);
                    mystatement.setString(1,custID.getText());
                    ResultSet myresult=mystatement.executeQuery();
                if(myresult.next())
                {

                    
                    
                        custName.setText(myresult.getString("Cust_fname"));
                        custLastName.setText(myresult.getString("Cust_lname"));
                        CustBirth2.setDate(myresult.getDate("Cust_birth"));
                        AddressCust.setText(myresult.getString("Cust_address"));
                    if(myresult.getString("Cust_gender").equals("Male"))
                    {
                        MaleButton.setSelected(true);
                    }
                    else
                    {
                        FemaleButton.setSelected(true);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Records ", " Error ",JOptionPane.ERROR_MESSAGE);
                }
                jScrollPane3.setVisible(false);
                getContentPane().validate();

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+e.getMessage(), " Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_SeachByIDButtonActionPerformed

    private void SearchByNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByNameButtonActionPerformed
        try
        {
            
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                if(!custName.getText().equals(""))
                {
                    String q="select * from customer where Cust_fname like ?";
                    pst=con.prepareStatement(q);
                    pst.setString(1,custName.getText()+ "%");
                    ResultSet myresult=pst.executeQuery();
                    DefaultTableModel mymodel=(DefaultTableModel) jTable2.getModel();
                    mymodel.setNumRows(0);
                    if(myresult.next())
                    {

                        jScrollPane3.setVisible(true);
                        getContentPane().validate();
                        do
                        {
                            String custid=myresult.getString("Cust_ID");
                            String custname=myresult.getString("Cust_fname");
                            String address=myresult.getString("Cust_address");
                            String dob=myresult.getString("Cust_birth");
                            String fname=myresult.getString("Cust_lname");
                            String gender=myresult.getString("Cust_gender");
                            mymodel.addRow(new Object[]{custid,custname,fname,gender,dob,address});

                        }
                        while(myresult.next());

                    }
                }
                else
                {
                    jScrollPane3.setVisible(false);
                    getContentPane().validate();
                    JOptionPane.showMessageDialog(rootPane, "Wrong Customer ID/No Records ", " Error ",JOptionPane.ERROR_MESSAGE);
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+e.getMessage(), " Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_SearchByNameButtonActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
         try
        {
             
               
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from sourcedestination";
                pst=con.prepareStatement(q);
                ResultSet myresult=pst.executeQuery();
                
                if(myresult.next())
                {
                    do
                    {
                        selectSourceFlight.addItem(myresult.getString("sourceflight"));
                        SelectDestiFlight.addItem(myresult.getString("flightDestination"));
                    }
                    while(myresult.next());
                }
                 
                generateTicketNumber();
                  
                       
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                finally
                {
                    con.close();
                }
            }
        catch(Exception e)
        {
         e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
    }
    }//GEN-LAST:event_formInternalFrameActivated

    private void amountCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountCaseActionPerformed
        // TODO add your handling code here:
        try
        {
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                int a=Integer.parseInt(SeatFlight.getValue().toString());

                int b=Integer.parseInt(chargesFlight.getText());
                int amount;
                amount=a*b;
                amountCase.setText(String.valueOf(amount));
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_amountCaseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AddressCust;
    private javax.swing.JButton BookButtonLoad;
    private com.toedter.calendar.JDateChooser CustBirth2;
    private javax.swing.JTextField DepTime;
    private javax.swing.JRadioButton FemaleButton;
    private javax.swing.JTextField FlightID;
    private javax.swing.JTextField FlightName;
    private javax.swing.ButtonGroup GroupButtonGender;
    private javax.swing.JRadioButton MaleButton;
    private javax.swing.JButton SeachByIDButton;
    private javax.swing.JButton SearchByNameButton;
    private javax.swing.JSpinner SeatFlight;
    private javax.swing.JComboBox<String> SelectDestiFlight;
    private javax.swing.JButton ShowButton;
    private javax.swing.JTextField amountCase;
    private javax.swing.JTextField chargesFlight;
    private javax.swing.JTextField custID;
    private javax.swing.JTextField custLastName;
    private javax.swing.JTextField custName;
    private javax.swing.JComboBox<String> flightClass;
    private com.toedter.calendar.JDateChooser flight_DepDate;
    private com.toedter.calendar.JDateChooser flight_arriveDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox<String> selectSourceFlight;
    private javax.swing.JTextField ticketNumber;
    // End of variables declaration//GEN-END:variables
}
