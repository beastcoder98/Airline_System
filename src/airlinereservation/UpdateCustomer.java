/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinereservation;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CHARIF
 */
public class UpdateCustomer extends javax.swing.JInternalFrame {

    /**
     * Creates new form UpdateCustomer
     */
    public UpdateCustomer() {
        initComponents();
    }

    Connection con;
    PreparedStatement pst;
    
    String path = null;
    byte[] imageuser = null;
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CustID = new javax.swing.JTextField();
        CusFname = new javax.swing.JTextField();
        Custlname = new javax.swing.JTextField();
        CustPassID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SearchByID = new javax.swing.JButton();
        SearchCustomerByName = new javax.swing.JButton();
        PhotoCustomer = new javax.swing.JLabel();
        ChangeCustomerPhoto = new javax.swing.JButton();
        CustBirth = new com.toedter.calendar.JDateChooser();
        expireDate = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableDisplayCustomer = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerAdresss = new javax.swing.JTextArea();
        CustContact = new javax.swing.JTextField();
        UpdateCustomer = new javax.swing.JButton();
        DeleteCustomer = new javax.swing.JButton();
        FemaleButton = new javax.swing.JRadioButton();
        MaleButton = new javax.swing.JRadioButton();
        custcountry = new javax.swing.JComboBox<>();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(200, 189, 240));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("First Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Last Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Country");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Passport ID");

        CustID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CustID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        CusFname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CusFname.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        Custlname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Custlname.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        CustPassID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CustPassID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Gender");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Birth Day");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Passport Expire Date");

        SearchByID.setText("Search By ID");
        SearchByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByIDActionPerformed(evt);
            }
        });

        SearchCustomerByName.setText("Search By Name");
        SearchCustomerByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchCustomerByNameActionPerformed(evt);
            }
        });

        PhotoCustomer.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 204), 3));
        PhotoCustomer.setPreferredSize(new java.awt.Dimension(120, 75));

        ChangeCustomerPhoto.setBackground(new java.awt.Color(240, 224, 160));
        ChangeCustomerPhoto.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        ChangeCustomerPhoto.setText("Change photo");
        ChangeCustomerPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeCustomerPhotoActionPerformed(evt);
            }
        });

        CustBirth.setBackground(new java.awt.Color(255, 204, 255));
        CustBirth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        expireDate.setBackground(new java.awt.Color(255, 204, 255));
        expireDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        TableDisplayCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CUSTOMER ID", "Full Name", "Country", "Gender", "Passport ID", "Passport Expire Date", "Birthday", "Contact", "Address"
            }
        ));
        TableDisplayCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDisplayCustomerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableDisplayCustomer);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Address");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Contact");

        CustomerAdresss.setBackground(new java.awt.Color(204, 255, 204));
        CustomerAdresss.setColumns(20);
        CustomerAdresss.setRows(5);
        jScrollPane1.setViewportView(CustomerAdresss);

        CustContact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CustContact.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        UpdateCustomer.setBackground(new java.awt.Color(51, 165, 139));
        UpdateCustomer.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        UpdateCustomer.setText("Update");
        UpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateCustomerActionPerformed(evt);
            }
        });

        DeleteCustomer.setBackground(new java.awt.Color(255, 153, 153));
        DeleteCustomer.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        DeleteCustomer.setText("Delete");
        DeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCustomerActionPerformed(evt);
            }
        });

        FemaleButton.setText("FEMALE");

        MaleButton.setText("MALE");

        custcountry.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        custcountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Australia", "Austria", "Austrian Empire", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Bavaria", "Belarus", "Belgium", "Belize", "Benin", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Brunswick and LÃ¼neburg", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cabo Verde", "Cambodia", "Cameroon", "Canada", "Cayman Islands, The", "Central African Republic", "Central American Federation", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo Free State", "Costa Rica", "Ivory Coast", "Croatia", "Cuba", "Cyprus", "Czechia", "Czechoslovakia", "Democratic Republic of the Congo", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Duchy of Parma", "East Germany", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Eswatini", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia, The", "Georgia", "Germany", "Ghana", "Grand Duchy of Tuscany", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Hanover", "Hanseatic Republics", "Hawaii", "Hesse", "Holy See", "Honduras", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Yugoslavia", "Kiribati", "Korea", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Lew Chew", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mecklenburg-Schwerin", "Mecklenburg-Strelitz", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Namibia", "Nassau*", "Nauru", "Nepal", "Netherlands, The", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North German Confederation", "North German Union", "North Macedonia", "Norway", "Oldenburg", "Oman", "Orange Free State", "Pakistan", "Palau", "Panama", "Papal States", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Piedmont-Sardinia", "Poland", "Portugal", "Qatar", "Republic of Genoa", "Republic of Korea", "Republic of the Congo", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Schaumburg-Lippe", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Sweden", "Switzerland", "Syria", "Tajikistan", "Tanzania", "Texas", "Thailand", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Two Sicilies", "Uganda", "Ukraine", "Union of Soviet Socialist Republics", "United Arab Emirates", "United Kingdom", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "WÃ¼rttemberg", "Yemen", "Zambia", "Zimbabwe" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Custlname, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CusFname, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CustID, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CustPassID, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(custcountry, 0, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(MaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(FemaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(expireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CustBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(SearchCustomerByName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SearchByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PhotoCustomer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChangeCustomerPhoto, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CustContact, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(UpdateCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(DeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(304, 304, 304))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(PhotoCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ChangeCustomerPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(CustID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SearchByID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(CusFname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SearchCustomerByName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Custlname))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(MaleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel6)
                                                            .addComponent(FemaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(0, 0, Short.MAX_VALUE))))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(custcountry)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CustPassID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CustBirth, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(UpdateCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(expireDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CustContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TableDisplayCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDisplayCustomerMouseClicked
        int column=0;
        int row=TableDisplayCustomer.getSelectedRow();

        String custid=TableDisplayCustomer.getValueAt(row, column).toString();
        try
        {

             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String q="select * from customer where Cust_ID=?";
                pst=con.prepareStatement(q);
                pst.setString(1,custid);
                 ResultSet myresult=pst.executeQuery();
                if(myresult.next())
                {

                    PhotoCustomer.setIcon(new ImageIcon(ImageIO.read(new File(myresult.getString("Cust_photo")))));
                    CustID.setText(myresult.getString("Cust_ID"));
                    CusFname.setText(myresult.getString("Cust_fname"));
                    Custlname.setText(myresult.getString("Cust_lname"));
                    custcountry.setSelectedItem(myresult.getString("Country"));
                    CustPassID.setText(myresult.getString("Cust_passportid"));
                    if(myresult.getString("Cust_gender").equals("Male"))
                    {
                        MaleButton.setSelected(true);
                    }
                    else
                    {
                        FemaleButton.setSelected(true);
                    }
                    CustBirth.setDate(myresult.getDate("Cust_birth"));
                    expireDate.setDate(myresult.getDate("Cust_expirepassport"));
                    CustContact.setText(myresult.getString("Cust_contact"));
                    CustomerAdresss.setText(myresult.getString("Cust_address"));
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_TableDisplayCustomerMouseClicked

    private void ChangeCustomerPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeCustomerPhotoActionPerformed
        // TODO add your handling code here:
        try {
            
            JFileChooser picchooser = new JFileChooser();
        picchooser.showOpenDialog(null);
        File pic = picchooser.getSelectedFile();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.iamges","png","jpg");
        picchooser.addChoosableFileFilter(filter);
        path = pic.getAbsolutePath();
        BufferedImage img;
        img = ImageIO.read(picchooser.getSelectedFile());
        ImageIcon imageIcon = new ImageIcon( new ImageIcon(img).getImage().getScaledInstance(250,250,Image.SCALE_DEFAULT));
       PhotoCustomer.setIcon(imageIcon);
        
            File image = new File(path);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buff = new byte[1024];
            
            for(int readNum;(readNum=fis.read(buff)) != -1; )
            {
                baos.write(buff,0,readNum);
            }
            imageuser = baos.toByteArray();
        
        }
        catch (IOException ex) {
            Logger.getLogger(Create_Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ChangeCustomerPhotoActionPerformed

    private void DeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCustomerActionPerformed
        // TODO add your handling code here:
        try
            {
                
              
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");
                
                try
                {
                    String q="delete from customer where Cust_ID=?";
                    pst=con.prepareStatement(q);
                    pst.setString(1,CustID.getText());
                  
              int a=  JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete?", "Deletion", JOptionPane.YES_NO_OPTION);
               
                if(a==JOptionPane.YES_OPTION)
                {
                    pst.executeUpdate();
                     JOptionPane.showMessageDialog(rootPane, "Deleted Successfully", "Customer details Deletion", JOptionPane.INFORMATION_MESSAGE);
                       CusFname.setText("");
                       Custlname.setText("");
                       custcountry.setSelectedIndex(0);
                       CustPassID.setText("");
                       //buttonGroup1.clearSelection();
                          
                          CustBirth.setDate(null);
                          expireDate.setDate(null);
                          CustomerAdresss.setText("");
                          CustContact.setText("");
                          PhotoCustomer.setIcon(null);
                          
                 try
                {
                    String p="select * from customer where Cust_fname=?";
                    pst=con.prepareStatement(p);
                 pst.setString(1,CusFname.getText());
                    ResultSet myresult=pst.executeQuery();
                     DefaultTableModel mymodel=(DefaultTableModel)TableDisplayCustomer.getModel();
                     mymodel.setNumRows(0);
                      
                     if(myresult.next())
                    {
                        jScrollPane2.setVisible(true);
                      getContentPane().validate();
                        do
                        {
                            String custid=myresult.getString("Cust_ID");
                            String custfname=myresult.getString("Cust_fname");
                            String custlname = myresult.getString("Cust_lname");
                            String custcoun = myresult.getString("Country");
                            String gender=myresult.getString("Cust_gender");
                            String passID = myresult.getString("Cust_passportid");
                            String passExpire = myresult.getString("Cust_expirepassport");
                            String custbirth = myresult.getString("Cust_birth");
                            String custcontact = myresult.getString("Cust_contact");
                            String address=myresult.getString("Cust_address");
                            
                            mymodel.removeRow(myresult.getInt(custfname));
                            
                        }
                        while(myresult.next());
                           
                    }
                  else
                     {
                           jScrollPane2.setVisible(true);
                      getContentPane().validate();
                         JOptionPane.showMessageDialog(rootPane, "No Records", "Error",JOptionPane.ERROR_MESSAGE);
                     }
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                          
                     
                }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                finally
                {
                    con.close();
                }
            }
        catch(Exception e)
        {
         e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
    }
    }//GEN-LAST:event_DeleteCustomerActionPerformed

    private void SearchByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByIDActionPerformed
        // TODO add your handling code here:
      try
        {
            

            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                String query="select * from customer where Cust_ID=?";
                pst=con.prepareStatement(query);

                pst.setString(1,CustID.getText());
                ResultSet rs=pst.executeQuery();
                if(rs.next())
                {

                    String F_Name = rs.getString("Cust_fname");
                    String l_Name = rs.getString("Cust_lname");
                    String Countr = rs.getString("Country");

                    String gender = rs.getString("Cust_gender");
                    String passId = rs.getString("Cust_passportid");
                    
                    String expirPass = rs.getString("Cust_expirepassport");
                    Date expDate = new SimpleDateFormat("dd-MM-yyyy").parse(expirPass);
                    
                    String birthCust= rs.getString("Cust_birth");
                    Date BirDate = new SimpleDateFormat("dd-MM-yyyy").parse(birthCust);
                    
                    String custCont = rs.getString("Cust_contact");
                    String custAddr = rs.getString("Cust_address");

                    java.sql.Blob blob = rs.getBlob("Cust_photo");
                byte[] _imagebytes = blob.getBytes(1,(int) blob.length());
                  ImageIcon image = new ImageIcon(_imagebytes);
                  Image im = image.getImage();
                  Image myImg = im.getScaledInstance(PhotoCustomer.getWidth(), PhotoCustomer.getHeight(), Image.SCALE_SMOOTH);
                  ImageIcon newImage = new ImageIcon(myImg);

                    
                    CusFname.setText(F_Name.trim());
                    Custlname.setText(l_Name.trim());
                    custcountry.setSelectedItem(Countr.trim());
                    CustPassID.setText(passId.trim());
                    if(gender.equals("Male")){
                        MaleButton.setSelected(true);
                        FemaleButton.setSelected(false);
                    } else {
                        FemaleButton.setSelected(true);
                        MaleButton.setSelected(false);
                    }
                   expireDate.setDate(expDate);
                   CustBirth.setDate(BirDate);
                   CustContact.setText(custCont.trim());
                   CustomerAdresss.setText(custAddr.trim());
                   PhotoCustomer.setIcon(newImage);
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Wrong FLight ID Records ", " Error ",JOptionPane.ERROR_MESSAGE);
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to "+e.getMessage(), " Error ",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_SearchByIDActionPerformed

    private void SearchCustomerByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchCustomerByNameActionPerformed
        // TODO add your handling code here:
        try
        {
           
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");

            try
            {
                if(!CusFname.getText().equals(""))
                {
                String q="select * from customer where Cust_fname like ?";
                pst=con.prepareStatement(q);
                pst.setString(1,CusFname.getText()+ "%");
                ResultSet myresult=pst.executeQuery();
                      DefaultTableModel mymodel=(DefaultTableModel) TableDisplayCustomer.getModel();
                      mymodel.setNumRows(0);
                if(myresult.next())
                {

              jScrollPane2.setVisible(true);
              getContentPane().validate();
                    do
                    {
                        String custid=myresult.getString("Cust_ID");
                        String fullName=myresult.getString("Cust_fname")+ " " + myresult.getString("Cust_lname");
                        String countr=myresult.getString("Country");
                        String gen=myresult.getString("Cust_gender");
                        String passID=myresult.getString("Cust_passportid");
                        String passEx=myresult.getString("Cust_expirepassport");
                        String birthD=myresult.getString("Cust_birth");
                        String cont=myresult.getString("Cust_contact");
                        String add = myresult.getString("Cust_address");
                        mymodel.addRow(new Object[]{custid,fullName,countr,gen,passID,passEx,birthD,cont,add});

                    }
                    while(myresult.next());

                }
                }
                else
                {
                    jScrollPane2.setVisible(false);
                    getContentPane().validate();
                    JOptionPane.showMessageDialog(rootPane, "Wrong Customer ID/No Records", "Error",JOptionPane.ERROR_MESSAGE);
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
            }
            finally
            {
                con.close();
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
        }
    }//GEN-LAST:event_SearchCustomerByNameActionPerformed

    private void UpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateCustomerActionPerformed
        // TODO add your handling code here:
        try
            {
               
            
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/javaproject","root","");
                
                try
                {
                    String q="update customer set Cust_fname=?,Cust_lname=?,Country=?,Cust_gender=?,Cust_passportid=?,Cust_expirepassport=?,Cust_birth=?,Cust_contact=?,Cust_address=? where Cust_ID=?";
                    pst=con.prepareStatement(q);
                    pst.setString(1, CusFname.getText());
                pst.setString(2, Custlname.getText());
                pst.setString(3,custcountry.getSelectedItem().toString());
                
                if(MaleButton.isSelected())
                   {
                        pst.setString(4, "Male");
                   }
                   else if(FemaleButton.isSelected())
                   {
                        pst.setString(4, "Female");
                   }
                
                pst.setString(5, CustPassID.getText());
                
                   SimpleDateFormat myformat=new SimpleDateFormat("dd-MM-yyyy");
                String expDate=myformat.format(expireDate.getDate());
                 pst.setString(6,expDate);
                 
                SimpleDateFormat dateformat=new SimpleDateFormat("dd-MM-yyyy");
                String birth=dateformat.format( CustBirth.getDate());             
                pst.setString(7, birth);
                
                pst.setString(8,CustContact.getText());                               
                pst.setString(9,CustomerAdresss.getText());
              //  pst.setBytes(10,imageuser);
                pst.setString(10,CustID.getText());
                pst.executeUpdate();
                  JOptionPane.showMessageDialog(rootPane, "Update Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
                  
                   try
                {
                    String p="select * from customer where Cust_fname=?";
                    pst=con.prepareStatement(p);
                    pst.setString(1,CusFname.getText());
                    ResultSet myresult=pst.executeQuery();
                     DefaultTableModel mymodel=(DefaultTableModel) TableDisplayCustomer.getModel();
                     mymodel.setNumRows(0);
                      
                     if(myresult.next())
                    {
                        jScrollPane2.setVisible(true);
                      getContentPane().validate();
                        do
                        {
                            String custid=myresult.getString("Cust_ID");
                            String custfname=myresult.getString("Cust_fname");
                            String custlname = myresult.getString("Cust_lname");
                            String custcoun = myresult.getString("Country");
                            String gender=myresult.getString("Cust_gender");
                            String passID = myresult.getString("Cust_passportid");
                            String passExpire = myresult.getString("Cust_expirepassport");
                            String custbirth = myresult.getString("Cust_birth");
                            String custcontact = myresult.getString("Cust_contact");
                            String address=myresult.getString("Cust_address");
                            mymodel.addRow(new Object[]{custid,custfname,custlname,custcoun,gender,passID,passExpire,custbirth,custcontact,address});
                            
                            
                            
                        }
                        while(myresult.next());
                           
                    }
                  else
                     {
                           jScrollPane2.setVisible(false);
                      getContentPane().validate();
                      
                         JOptionPane.showMessageDialog(rootPane, "The ID/name doesn't exist in our database try again", " Error ",JOptionPane.ERROR_MESSAGE);
                         
                     }
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                              
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error in query due to"+e.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
                }
                finally
                {
                    con.close();
                }
            }
        catch(Exception e)
        {
         e.printStackTrace();
         JOptionPane.showMessageDialog(rootPane, "Error in connection" +e.getMessage());
    }
    }//GEN-LAST:event_UpdateCustomerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangeCustomerPhoto;
    private javax.swing.JTextField CusFname;
    private com.toedter.calendar.JDateChooser CustBirth;
    private javax.swing.JTextField CustContact;
    private javax.swing.JTextField CustID;
    private javax.swing.JTextField CustPassID;
    private javax.swing.JTextField Custlname;
    private javax.swing.JTextArea CustomerAdresss;
    private javax.swing.JButton DeleteCustomer;
    private javax.swing.JRadioButton FemaleButton;
    private javax.swing.JRadioButton MaleButton;
    private javax.swing.JLabel PhotoCustomer;
    private javax.swing.JButton SearchByID;
    private javax.swing.JButton SearchCustomerByName;
    private javax.swing.JTable TableDisplayCustomer;
    private javax.swing.JButton UpdateCustomer;
    private javax.swing.JComboBox<String> custcountry;
    private com.toedter.calendar.JDateChooser expireDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
